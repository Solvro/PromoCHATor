name: promochator

services:
  vectordb:
    image: '${DOCKER_IMAGE_POSTGRES}'
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      vectordb:
        condition: service_healthy
        restart: true
      ollama:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - POSTGRES_SERVER=vectordb
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - INITIALIZE_DATABASE=${INITIALIZE_DATABASE?Variable not set}
      - CSV_DATASET_PATH=${CSV_DATASET_PATH?Variable not set}
      - OPENAI_API_KEY=${OPENAI_API_KEY?Variable not set}
      - DISABLE_GPT4=${DISABLE_GPT4?Variable not set}
      - OLLAMA_AVAILABLE=${OLLAMA_AVAILABLE?Variable not set}
      - MODEL=${MODEL?Variable not set}
      - CHUNK_SIZE=${CHUNK_SIZE?Variable not set}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP?Variable not set}
      - EMBEDDING_DIM=${EMBEDDING_DIM?Variable not set}
      - PROMPT_TEMPLATE_FILE=${PROMPT_TEMPLATE_FILE?Variable not set}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5
    build:
      context: ./ml-promochator
      target: ${DOCKER_BACKEND_TARGET}
    develop:
      watch:
        - path: ./ml-promochator
          action: sync
          target: /promochator
        - path: ./ml-promochator/pyproject.toml
          action: rebuild

  ollama:
    image: '${DOCKER_IMAGE_OLLAMA?Variable not set}:${TAG-latest}'
    ports:
      - "${OLLAMA_PORT}:${OLLAMA_PORT}"
    healthcheck:
      test: ollama --version || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    pull_policy: always
    tty: true
    restart: unless-stopped
    volumes:
      - ollama:/root/.ollama

volumes:
  postgres_data:
  ollama:
